#!/usr/bin/env perl

use strict;
use warnings;
use 5.010;

use Date::Format;
use List::Util qw(max sum);
use RRDs;

my $debug = ( @ARGV and $ARGV[0] eq '-d' );

my %ascii = (
	unknown => <<'EOF',
            ________
        _jgN########Ngg_
      _N##N@@""  ""9NN##Np_
     d###P            N####p
     "^^"              T####
                       d###P
                    _g###@F
                 _gN##@P
               gN###F"
              d###F
             0###F
             0###F
             0###F
             "NN@'

              ___
             q###r
              ""
EOF
	open => <<'EOF',
                                        :X-
                                     :X###
                                   ;@####@
                                 ;M######X
                               -@########$
                             .$##########@
                            =M############-
                           +##############$
                         .H############$=.
            ,/:         ,M##########M;.
         -+@###;       =##########M;
      =%M#######;     :#########M/
   -$M###########;   :#########/
    ,;X###########; =########$.
        ;H#########+#######M=
          ,+##############+
             /M#########@-
               ;M######%
                 +####:
                  ,$M-          
EOF
	closed => <<'EOF',
  #####                             #####
    #####                         #####
      #####                     #####
        #####                 #####
          #####             #####
            #####         #####
              #####     #####
                ##### #####
                  #######
                  #######
                ##### #####
              #####     #####
            #####         #####
          #####             #####
        #####                 #####
      #####                     #####
    #####                         #####
  #####                             #####
EOF
);

sub show_status {
	my ( $status, $confidence ) = @_;
	my $desc;

	if ( $status eq 'unknown' ) {
		$desc = 'no data available';
	}
	else {
		say "confidence: ${confidence}" if ($debug);
		given ($confidence) {
			when ( $_ < 25 ) { $desc = 'confidence: low' }
			when ( $_ < 75 ) { $desc = 'confidence: medium' }
			default          { $desc = 'confidence: high' }
		}
	}

	printf(
		"%s\n\n%s\n\nupdated: %s\n\n",
		$status, $desc, time2str( '%Y-%m-%d %H:%M', time ),
	);

	say $ascii{$status} if ( not $debug );

	exit 0;
}

# array of non-infrastructure IPs in the Chaosdorf LAN. [0] == 60 minutes ago,
# [-1] == latest
my @data = grep { defined } map { $_->[0] } @{
	(
		RRDs::fetch(
			qw(/var/lib/munin/chaosdorf.dn42/chaosdorf.dyndns.org-online_ips-dynip-g.rrd MAX -s end-1h -e now)
		)
	  )[3]
  };

if ( not @data ) {
	show_status('unknown');
}

my $avg               = sum(@data) / @data;
my $last              = $data[-1];
my $closed_confidence = ( ( $avg - $last ) * 50 ) + ( ( 3 - $avg ) * 30 );
my $open_confidence   = ( ( $last - $avg ) * 20 ) + ( ( $avg - 3 ) * 20 );

say "average $avg, last $last" if ($debug);

if ( $avg <= 3 and $closed_confidence >= 0 ) {
	show_status( 'closed', $closed_confidence );
}

# <= 3 computers online, but one got turned on in the last hour.
# So there must be someone there. Right?
elsif ( $closed_confidence < 0 ) {
	show_status( 'open', $closed_confidence * (-1) );
}
else {
	show_status( 'open', $open_confidence );
}
