#!/usr/bin/env perl

use strict;
use warnings;
use 5.010;

use autodie qw(open close);
use File::Copy qw(move);
use LWP::Simple qw(get);
use XML::LibXML;

my ($outfile) = @ARGV;
my $content
  = get(
'http://wiki.chaosdorf.de/index.php?title=Special:RecentChanges&feed=rss&hideminor=1'
  );

if ( not $content ) {
	die("get() failed\n");
}
if ( not $outfile ) {
	die("usage: $0 <outfile>\n");
}

my $tree    = XML::LibXML->load_xml( string => $content );
my $xp_it   = XML::LibXML::XPathExpression->new('/rss/channel/item');
my $xp_desc = XML::LibXML::XPathExpression->new('./description');

for my $node ( $tree->findnodes($xp_it) ) {
	my ($desc) = $node->findnodes($xp_desc);

	my $text = ( split( /\n/, $desc->textContent ) )[0];

	# strip everything but the first line from the description element
	# (we don't want "← Previous Revision" etc. in twitter)

	$node->removeChild($desc);
	$node->appendChild( $tree->createElement('description') );
	($desc) = $node->findnodes($xp_desc);
	$desc->appendChild( $tree->createTextNode($text) );
}

umask(0022);
open( my $fh, '>', "${outfile}.new" );
say $fh $tree->serialize;
close($fh);

move( "${outfile}.new", $outfile );
